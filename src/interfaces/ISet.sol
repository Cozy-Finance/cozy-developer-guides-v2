// SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.0;

import "src/interfaces/IConfig.sol";
import "src/interfaces/ILFT.sol";
import "src/interfaces/ISetEvents.sol";
import "src/interfaces/ISetTypes.sol";

interface ISet is ILFT, ISetEvents, ISetTypes {
  function accrueDecay(address _trigger) external;
  function accruedCozyBackstopFees() view external returns (uint128);
  function accruedCozyReserveFees() view external returns (uint128);
  function accruedSetOwnerFees() view external returns (uint128);
  function activeProtection(address _trigger) view external returns (uint256);
  function asset() view external returns (address);
  function assetBalance() view external returns (uint128);
  function assetsPendingWithdrawal() view external returns (uint128);
  function balanceOfMatured(address _user) view external returns (uint256 _balance);
  function cancel(address _trigger, uint256 _protection, address _receiver, address _owner) external returns (uint256 _refund, uint256 _ptokens);
  function claim(address _trigger, uint256 _protection, address _receiver, address _owner) external returns (uint256 _ptokens);
  function claimCozyFees(address _owner, address _backstop) external;
  function claimSetFees(address _receiver) external;
  function completeRedeem(uint256 _redemptionId) external;
  function completeRedeem(uint256 _redemptionId, address _receiver) external;
  function completeWithdraw(uint256 _withdrawalId) external;
  function completeWithdraw(uint256 _withdrawalId, address _receiver) external;
  function convertToAssets(uint256 shares) view external returns (uint256);
  function convertToPTokens(address _trigger, uint256 _protection) view external returns (uint256);
  function convertToProtection(address _trigger, uint256 _ptokens) view external returns (uint256);
  function convertToShares(uint256 assets) view external returns (uint256);
  function costFactor(address _trigger, uint256 _protection) view external returns (uint256 _costFactor);
  function currentDripRate() view external returns (uint256);
  function dataApd(address) view external returns (bytes32);
  function dataSdp(address) view external returns (bytes32);
  function decayModel() view external returns (address);
  function deposit(uint256 _assets, address _receiver) external returns (uint256 _shares);
  function depositFee() view external returns (uint256);
  function depositFees() view external returns (uint256 _reserveFee, uint256 _backstopFee, uint256 _setOwnerFee);
  function drip() external;
  function dripModel() view external returns (address);
  function getMints(address _user) view external returns (MintMetadata[] memory);
  function initialize(address _asset, uint256 _leverageFactor, uint256 _depositFee, address _decayModel, address _dripModel, IConfig.MarketInfo[] memory _marketInfos) external;
  function initializeCount() view external returns (uint256);
  function isMarket(address _who) view external returns (bool);
  function lastDripRate() view external returns (uint96);
  function lastDripTime() view external returns (uint32);
  function lastTriggeredExchangeRate() view external returns (uint192);
  function lastTriggeredPendingWithdrawalCount() view external returns (uint64);
  function leverageFactor() view external returns (uint256);
  function manager() view external returns (address);
  function marketConfig(address) view external returns (bytes32);
  function maxDeposit(address) view external returns (uint256);
  function maxMint(address) view external returns (uint256);
  function maxProtection(address _trigger) view external returns (uint256);
  function maxPurchaseAmount(address _trigger) view external returns (uint256 _protection);
  function maxRedemptionRequest(address _owner) view external returns (uint256);
  function maxWithdrawalRequest(address _owner) view external returns (uint256);
  function mint(uint256 _shares, address _receiver) external returns (uint256 _assets);
  function mints(address, uint256) view external returns (uint128 amount, uint64 time, uint64 delay);
  function nextDecayAmount(address _trigger) view external returns (uint256 _accruedDecay);
  function nextDripAmount() view external returns (uint256);
  function nonces(address) view external returns (uint256);
  function numFrozenMarkets() view external returns (uint256);
  function numMarkets() view external returns (uint256);
  function numTriggeredMarkets() view external returns (uint256);
  function pause() external;
  function payout(address _trigger, uint256 _ptokens, address _receiver, address _owner) external returns (uint256 _protection);
  function pendingWithdrawalCount() view external returns (uint64);
  function pendingWithdrawalData(uint256 _withdrawalId) view external returns (uint256 _remainingWithdrawalDelay, PendingWithdrawal memory _pendingWithdrawal);
  function pendingWithdrawals(uint256) view external returns (uint128 shares, uint128 assets, address owner, uint64 queueTime, address receiver, uint64 delay);
  function previewCancellation(address _trigger, uint256 _protection) view external returns (uint256 _refund, uint256 _ptokens, uint256 _reserveFeeAssets, uint256 _backstopFeeAssets);
  function previewCancellationUtilization(address _trigger, uint256 _assets) view external returns (uint256);
  function previewClaim(address _trigger, uint256 _protection) view external returns (uint256 _ptokens);
  function previewDeposit(uint256 _assets) view external returns (uint256 _shares);
  function previewDepositData(uint256 _assets) view external returns (uint256 _userShares, uint256 _reserveFeeAssets, uint256 _backstopFeeAssets, uint256 _setOwnerFeeAssets);
  function previewMint(uint256 _shares) view external returns (uint256 _assets);
  function previewMintData(uint256 _shares) view external returns (uint256 _assets, uint256 _reserveFeeAssets, uint256 _backstopFeeAssets, uint256 _setOwnerFeeAssets);
  function previewPayout(address _trigger, uint256 _ptokens) view external returns (uint256 _protection);
  function previewPurchase(address _trigger, uint256 _protection) view external returns (uint256 _totalCost, uint256 _ptokens);
  function previewPurchaseData(address _trigger, uint256 _protection) view external returns (uint256 _totalCost, uint256 _ptokens, uint256 _cost, uint256 _reserveFeeAssets, uint256 _backstopFeeAssets, uint256 _setOwnerFeeAssets);
  function previewPurchaseUtilization(address _trigger, uint256 _assets) view external returns (uint256);
  function previewRedeem(uint256 shares) view external returns (uint256);
  function previewSale(address _trigger, uint256 _ptokens) view external returns (uint256 _refund, uint256 _protection, uint256 _reserveFeeAssets, uint256 _backstopFeeAssets);
  function previewWithdraw(uint256 assets) view external returns (uint256);
  function ptoken(address _who) view external returns (address _ptoken);
  function ptokenFactory() view external returns (address);
  function purchase(address _trigger, uint256 _protection, address _receiver) external returns (uint256 _totalCost, uint256 _ptokens);
  function purchaseFees(address _trigger) view external returns (uint256 _reserveFee, uint256 _backstopFee, uint256 _setOwnerFee);
  function redeem(uint256 _shares, address _receiver, address _owner) external returns (uint256 _assets);
  function refundFactor(address _trigger, uint256 _protection) view external returns (uint256 _refundFactor);
  function remainingProtection(address _trigger) view external returns (uint256);
  function sell(address _trigger, uint256 _ptokens, address _receiver, address _owner) external returns (uint256 _refund, uint256 _protection);
  function shortfall(address _trigger) view external returns (uint256);
  function state(address _who) view external returns (uint8 _state);
  function supplierFeePool() view external returns (uint128);
  function sync() external;
  function totalAssets() view external returns (uint256 _protectableAssets);
  function triggers(uint256) view external returns (address);
  function unpause(uint8 _state) external;
  function updateConfigs(uint256 _leverageFactor, uint256 _depositFee, address _decayModel, address _dripModel, IConfig.MarketInfo[] memory _marketInfos) external;
  function updateMarketState(address _trigger, uint8 _newState) external;
  function updateSetState(uint8 _state) external;
  function utilization(address _trigger) view external returns (uint256);
  function utilization() view external returns (uint256);
  function withdraw(uint256 _assets, address _receiver, address _owner) external returns (uint256 _shares);
}